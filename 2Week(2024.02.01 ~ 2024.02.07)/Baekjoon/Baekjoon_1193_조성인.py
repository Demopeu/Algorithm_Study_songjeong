# https://www.acmicpc.net/problem/1193

# 시간 복잡도 : O(X)

X = int(input())

# 왼쪽 위에서 오른쪽 아래로 갈수록 분자와 분모의 합이 1씩 커지고 분수가 하나씩 증가
# 배열을 피라미드 형태라고 생각, 행의 개수가 늘어날 때마다 값의 개수가 늘어남
# 행의 번호와 값의 개수가 같으므로 번호를 매길 때 이전 행들의 총합 + 1부터 매기면 됨

# 1부터 시작
n = 1

# X가 있는 행에 도착할 때까지 반복
while X > n*(n+1)/2:
    n += 1

# 지그재그로 번호를 매겨서 홀수 열일때는 반대로 계산
if n % 2 == 0:
    # 해당 행에서 x의 위치(1~n) = X - (n-1의 총합)
    head = int(X - (n-1)*n/2)
else:
    head = n + 1 - int(X - (n - 1) * n / 2)
# 분자와 분모가 반비례
body = n + 1 - head

print(f'{head}/{body}')